# Bases de datos de Minería Genómica

## **Genome Mining Databases**

## **MIBiG Database**

The Minimum Information about a Biosynthetic Gene cluster [MIBiG](https://mibig.secondarymetabolites.org/repository) is a database that facilitates consistent and systematic deposition and retrieval of data on biosynthetic gene clusters. MIBiG provides a robust community standard for annotations and metadata on biosynthetic gene clusters and their molecular products. It will empower next-generation research on the biosynthesis, chemistry and ecology of broad classes of societally relevant bioactive secondary metabolites, guided by robust experimental evidence and rich metadata components.

### **Browsing and Querying in the MIBiG database**

Select “Search” on the upper right corner of the menu bar

![](https://carpentries-incubator.github.io/genome-mining/fig/MIBiG_search.png)

For simple queries, such as *Streptococcus agalactiae* or searching for a specific strain you can use the “Simple search” function.

![](https://carpentries-incubator.github.io/genome-mining/fig/MIBiG_query.png)

For complex queries, the database also provides a sophisticated query builder that allows querying on all antiSMASH annotations. To enable this function, click on “Build a query”

### **Results**

![](https://carpentries-incubator.github.io/genome-mining/fig/MIBiG_results.png)

:::: callout-note
## Exercise 1

Enter to [MIBiG](https://mibig.secondarymetabolites.org/) and search BGCs from *Streptococcus*. Search the BGCs that produce the products Thermophilin 1277 and Streptolysin S. Based on the table on MIBiG, which of these organisms has the most complete annotation?

::: {.callout-note collapse="TRUE"}
## Solution

*Streptococcus thermophilus* produce Thermophilin 1277 while *Streptococcus pyogenes* M1 GAS produces Streptolysin S. According to MIBiG metadata Streptolysin S BGC is complete while Thermophilin 1277 is not. So Streptolysin S BGC is better annotated.
:::
::::

## **antiSMASH database**

The [antiSMASH database](https://antismash-db.secondarymetabolites.org/) provides an easy to use, up-to-date collection of annotated BGC data. It allows to easily perform cross-genome analyses by offering complex queries on the datasets.

### **Browsing and Querying in the antiSMASH database**

Select “Browse” on the top menu bar, alternatively you can select “Query” in the center

![](https://carpentries-incubator.github.io/genome-mining/fig/antiSMASH_db.png)

For simple queries, such as “*Streptococcus*” or searching for a specific strain you can use the “Simple search” function.

![](https://carpentries-incubator.github.io/genome-mining/fig/antiSMASH_search.png)

For complex queries, the database also provides a sophisticated query builder that allows querying on all antiSMASH annotations. To enable this function, click on “Build a query”

![](https://carpentries-incubator.github.io/genome-mining/fig/antiSMASH_query.png)

Use antiSMASH database to analyse the BGC contained in the *Streptococcus* genomes. We’ll use Python to visualize the data. First, import pandas, matplotlib.pyplot and seaborn libraries.

``` python
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
```

Secondly, store in a dataframe variable the content of the *Streptococcus* predicted BGC downloaded from antiSMASH-db.

``` python
data = pd.read_csv("https://raw.githubusercontent.com/AxelRamosGarcia/Genome-Mining/gh-pages/data/antismash_db.csv", sep="\t")
data
```

![](https://carpentries-incubator.github.io/genome-mining/fig/21-08-24-chapter9-table.png)

Now, group the data by the variables Species and BGC type:

``` python
occurences = data.groupby(["Species", "BGC type"]).size().reset_index(name="Occurrences")
```

And visualize the content of the ocurrences grouped by species column:

``` python
occurences
```

![](https://carpentries-incubator.github.io/genome-mining/fig/21-08-24-chapter9-occurences.png)

Let’s see our first visualization of the BGC content on a heatmap.

``` python
pivot = occurences.pivot(index="BGC type", columns="Species", values="Occurrences")
plt.figure(figsize=(8, 10))
sns.heatmap(pivot, cmap="coolwarm")
plt.show()
```

![](https://carpentries-incubator.github.io/genome-mining/fig/21-08-24-chapter9-heatmap.png)

Now, let’s restrict ourselves to *S. agalactiae*.

``` python
agalactiae = occurences[occurences["Species"] == "agalactiae"]
sns.scatterplot(agalactiae, x="BGC type", y="Occurrences")
plt.xticks(rotation="vertical")
plt.show()
```

![](https://carpentries-incubator.github.io/genome-mining/fig/21-08-24-chapter9.dotplot.png)

Finally, let’s restrict ourselves to BGC predicted less than 200 times.

``` python
filtered = occurences[occurences["Occurrences"] < 200]
plt.figure(figsize=(15, 5))
sns.scatterplot(filtered, x="BGC type", y="Occurrences")
plt.xticks(rotation="vertical")
plt.grid(axis="y")
plt.show()
```

![](https://carpentries-incubator.github.io/genome-mining/fig/21-08-24-chapter9.dotplot2.png)

``` python
filtered_pivot = filtered.pivot(index="BGC type", columns="Species", values="Occurrences")
plt.figure(figsize=(8, 10))
sns.heatmap(filtered_pivot, cmap="coolwarm")
plt.show()
```

![](https://carpentries-incubator.github.io/genome-mining/fig/21-08-24-chapter9-pivot-filtered.png)

::: {.callout-note style="color:darkgreen"}
## Key Points

-   MIBiG provides BGCs that have been experimentally tested

-   antiSMASH database comprises predicted BGCs of each organism
:::

References

<https://carpentries-incubator.github.io/genome-mining/03-antiSMASHdb-MiBiG/index.html>
