[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop",
    "section": "",
    "text": "Informaci√≥n general\n\n\nSobre el curso üìåRequisitos previosAgenda üìÜ\n\n\nFuente del curso\n\nFechas: Del 29 al 30 de abril del 2025\nDuraci√≥n del curso: 10 horas\n\nInstructores:\n\nEvelia Coss - posdoctoral LIIGH-UNAM. Miembro de LupusRGMX, Project JAGUAR, RiaBio, CDSB-Mexico, RSG-M√©xico y RLadies Morelia. Coordinadora de los VieRnes de Bioinformatica en el LIIGH. Instructora Certificada de The Carpentries. Contacto: correo, pagina web\nMarisol Navarro - RSG-M√©xico y RLadies Morelia.\nJohana Castel√°n - RSG-M√©xico y RLadies Morelia.\n\nAyudantes:\n\nMariana Devon - Estudiante de maestr√≠a, UAM.\n\nResumen:\nObjetivos:\nEn esta gu√≠a r√°pida aprender√°s a:\nCitar y reutilizar el material del curso\nLos datos del curso se pueden reutilizar y adaptar libremente con la debida atribuci√≥n. Todos los datos de los cursos de estos repositorios est√°n sujetos a la licencia Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0).\n\n\n\nDebes tener una cuenta de usuario de GitHub. Para m√°s informaci√≥n, consulta ‚ÄúCreaci√≥n de una cuenta en GitHub‚Äù.\nNo necesitas saber c√≥mo codificar, utilizar la l√≠nea de comandos o instalar Git (el software de control de versiones en el que est√° compilado GitHub).\nContar con una terminal con Git, en Windows puedes usar Git Bash.\n\n\n\n\n\n\n\n\n\n\nTema\nTiempo\n\n\n\n\nüî∑ Secci√≥n 1 - (11:30 - 13:30 h) (7 marzo)\n\n\n\n\nCreaci√≥n de una cuenta en GitHub\n\n5 min\n\n\n\nIntroducci√≥n a Git / GitHub\n\n15 min\n\n\n\nActividad 1: Sincronizaci√≥n y llaves\n\n15 min\n\n\n‚òï Coffee break (10 min) - (12:00-12:10) ‚òï\n10 min\n\n\nüî∑¬† Secci√≥n 2 - (12:10-13:00 h)\n\n\n\n\nComandos usados en Github y RStudio\n\n25 min\n\n\n\nActividad 2: Pagina de inicio en GitHub\n\n15 min\n\n\nüî∑¬† Secci√≥n 3 - (11:30 - 13:30 h) (14 marzo)\n\n\n\n\nBuenas practicas en R\n\n30 min\n\n\n\nActividad 3: Pagina web en GitHub\n\n1:30 min",
    "crumbs": [
      "Informaci√≥n general"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1¬† Introducci√≥n Sobre el Workshop",
    "section": "",
    "text": "1.1 Referencias\nNo olvides las referencias",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introducci√≥n Sobre el Workshop</span>"
    ]
  },
  {
    "objectID": "Cap1.html",
    "href": "Cap1.html",
    "title": "2¬† Introducci√≥n a la Resistencia a Antibi√≥ticos",
    "section": "",
    "text": "3 Genome database for this workshop\n\n3.0.1 Description of the dataset\nIn this lesson, we will follow a standard pangenomics pipeline that involves genomic annotation, clustering of genes to identify orthologous sequences and build the gene families, and analyzing the pangenome partitions and openness. To illustrate these concepts, we will work with a dataset consisting of eight strains of Streptococcus agalactiae as included in the pioneering pangenome study by Tettelin et al., 2005 (See the Table below).\nWe already have the genomes of strains 18RS21 and H36B available in our pan_workshop/data directory. However, the remaining strains will be downloaded and annotated in the upcoming episodes, allowing us to explore the complete dataset.\nGeneral description of the S. agalactiae genomes\n\n\n\nStrain\nHost\nSerotype\n\n\n\n\nS. agalactiae 18RS21\nHuman\nII\n\n\nS. agalactiae 515\nHuman\nIa\n\n\nS. agalactiae A909\nHuman\nIa\n\n\nS. agalactiae CJB111\nHuman\nV\n\n\nS. agalactiae COH1\nHuman\nIII\n\n\nS. agalactiae H36B\nHuman\nIb\n\n\nS. agalactiae NEM316\nHuman\nIII\n\n\nS. agalactiae 2603V/R\nHuman\nV\n\n\n\n\n\n\n\n\n\nPrepare your genome database\n\n\n\nMake sure you have the pan_workshop/ directory in your home directory. If you do not have it, you can download it with the following instructions.\n$ cd ~ #Make sure you are in the home directory\n$ wget https://zenodo.org/record/7974915/files/pan_workshop.zip?download=1 #Download the `zip` file.\n$ unzip 'pan_workshop.zip?download=1' \n$ rm 'pan_workshop.zip?download=1'\n\n\n\n\n\n\n\n\nKey Points\n\n\n\n\nA pangenome encompasses the complete collection of genes found in all genomes within a specific group, typically a species.\nComparing the complete genome sequences of all members within a clade allows for the construction of a pangenome.\nThe pangenome consists of two main components: the core genome and the accessory genome.\nThe accessory genome can be further divided into the shell genome and the cloud genome.\nIn an open pangenome, the size of the pangenome significantly increases with the addition of each new genome.\nIn a closed pangenome, only a few gene families are added to the pangenome when a new genome is introduced.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a la Resistencia a Antibi√≥ticos</span>"
    ]
  },
  {
    "objectID": "Cap2.html",
    "href": "Cap2.html",
    "title": "3¬† Instalar Git Bash en Windows",
    "section": "",
    "text": "3.1 Referencia",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Instalar Git Bash en Windows</span>"
    ]
  },
  {
    "objectID": "Cap2.html#referencia",
    "href": "Cap2.html#referencia",
    "title": "3¬† Instalar Git Bash en Windows",
    "section": "",
    "text": "Guia de instalacion de Git Bash",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Instalar Git Bash en Windows</span>"
    ]
  },
  {
    "objectID": "Cap3.html",
    "href": "Cap3.html",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "",
    "text": "4.1 Paso 1. Generar una llave p√∫blica\nCuando ejecutes el programa, te va a preguntar si quieres generar una frase, identificar y como quieres nombrar la llave. Si no quieres complicarte presiona 3 veces ENTER, hasta que te parezca una pantalla como al siguiente:\nPosteriormente, tendras una carpeta llamada .ssh/, entra en esa carpeta y tendras dos archivos, si no los renombraste tendran el nombre de id_ed25519.\nVamos a abrir la terminal y vamos a ver el contenido de la carpeta .ssh/:",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap3.html#paso-1.-generar-una-llave-p√∫blica",
    "href": "Cap3.html#paso-1.-generar-una-llave-p√∫blica",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "",
    "text": "Actividad (15 min)\n\n\n\nDeberan contar con:\n\nUna cuenta en GitHub\nR y RStudio actualizados\nGit instalado\nColoca en la terminal la siguiente informaci√≥n para generar una clave con el mismo correo que usaste para registrar tu cuenta en GitHub.\nssh-keygen -t ed25519 -C \"your_email@example.com\"\nNOTA: Si no cuentas con ssh-keygen instalado, primero corre este c√≥digo.\nsudo apt-get install ssh-keygen\n\n\n\n\n\n\n\nid_ed25519: llave local, no la vamos a usar. Tampoco la compartas.\nid_ed25519.pub : llave publica. La usaremos para copiarla en los servidores que usaremos.\n\n\nls .ssh/",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap3.html#paso-2.-copiar-la-clave-ssh-p√∫blica",
    "href": "Cap3.html#paso-2.-copiar-la-clave-ssh-p√∫blica",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.2 Paso 2. Copiar la clave SSH p√∫blica",
    "text": "4.2 Paso 2. Copiar la clave SSH p√∫blica\n\nAccede a la terminal en tu computadora.\nCopia la clave SSH generada anteriormente usando el siguiente comando:\n\ncat ~/.ssh/id_ed25519.pub\nEste comando mostrar√° tu clave p√∫blica en la terminal.\n\nSelecciona y copia toda la clave que aparece en la terminal. Aseg√∫rate de copiar desde ssh-rsa hasta el final de tu correo electr√≥nico.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap3.html#paso-3.-agregar-la-clave-ssh-a-tu-cuenta-de-github",
    "href": "Cap3.html#paso-3.-agregar-la-clave-ssh-a-tu-cuenta-de-github",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.3 Paso 3. Agregar la clave SSH a tu cuenta de GitHub",
    "text": "4.3 Paso 3. Agregar la clave SSH a tu cuenta de GitHub\n\nInicia sesi√≥n en GitHub en tu navegador.\nHaz clic en tu foto de perfil en la esquina superior derecha y selecciona ‚ÄúSettings‚Äù (Configuraci√≥n).\nEn el men√∫ lateral izquierdo, selecciona ‚ÄúSSH and GPG keys‚Äù.\nHaz clic en el bot√≥n verde ‚ÄúNew SSH key‚Äù.\nEn el campo ‚ÄúTitle‚Äù, ingresa un nombre descriptivo para tu clave (por ejemplo, ‚ÄúMi computadora personal‚Äù).\nEn el campo ‚ÄúKey‚Äù, pega la clave SSH que copiaste previamente de la terminal.\nHaz clic en ‚ÄúAdd SSH key‚Äù para guardar la clave.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap3.html#paso-4.-configurar-rstudio-para-usar-git-bash-como-terminal",
    "href": "Cap3.html#paso-4.-configurar-rstudio-para-usar-git-bash-como-terminal",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.4 Paso 4. Configurar RStudio para usar Git Bash como terminal",
    "text": "4.4 Paso 4. Configurar RStudio para usar Git Bash como terminal\n\nAbre RStudio.\nDir√≠gete a Tools (Herramientas) en la barra superior y selecciona Global Options (Opciones globales).\nEn el men√∫ de opciones globales, selecciona la pesta√±a Terminal.\nEn el campo New terminal open with, selecciona Git Bash.\n\nHaz clic en Apply y luego en OK.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap3.html#paso-5.-abrir-la-terminal-de-git-bash-en-rstudio",
    "href": "Cap3.html#paso-5.-abrir-la-terminal-de-git-bash-en-rstudio",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.5 Paso 5. Abrir la terminal de Git Bash en RStudio",
    "text": "4.5 Paso 5. Abrir la terminal de Git Bash en RStudio\nAhora, para abrir la terminal de Git Bash dentro de RStudio, solo tienes que:\n\nIr al Tools , hacer clic en Terminal y en abrir New terminal.\nDeber√≠as ver que se abre una nueva sesi√≥n con Git Bash como la terminal predeterminada.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap3.html#paso-6.-verificar-la-conexi√≥n",
    "href": "Cap3.html#paso-6.-verificar-la-conexi√≥n",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.6 Paso 6. Verificar la conexi√≥n",
    "text": "4.6 Paso 6. Verificar la conexi√≥n\nVuelve a la terminal y ejecuta el siguiente comando para verificar que tu clave SSH est√° correctamente configurada con GitHub:\nssh -T git@github.com\nEn caso de que se necesite, puedes especificar la llave que usaste:\nssh -i ~/.ssh/id_ed25519.pub -T git@github.com\nEl comando ssh -T git@github.com simplemente verifica que tu clave privada se est√° usando correctamente y que tu clave p√∫blica ha sido registrada en GitHub.\nSi es la primera vez que te conectas a GitHub con SSH, puede que veas un mensaje que te pregunte si deseas continuar conect√°ndote. Escribe ‚Äúyes‚Äù.\nSi todo est√° bien configurado, deber√≠as ver un mensaje similar a este:\nHi username! You've successfully authenticated, but GitHub does not provide shell access.\nEsto confirmar√° que tu clave SSH se ha agregado correctamente a tu cuenta de GitHub y que la conexi√≥n es exitosa.\n\n4.6.1 Soluci√≥n a Error de Configuraci√≥n de Usuario en Git\nEl comando git config se utiliza para configurar opciones en Git, y los siguientes comandos en particular se usan para establecer tu nombre y correo electr√≥nico globalmente en tu configuraci√≥n de Git:\ngit config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n\ngit config --global user.email \"you@example.com\"\n\nEste comando configura tu direcci√≥n de correo electr√≥nico, la cual ser√° utilizada en todos tus commits de Git. El correo electr√≥nico asociado con los commits es importante porque ayuda a identificar qui√©n realiz√≥ qu√© cambios en el repositorio. ‚Äìglobal significa que esta configuraci√≥n se aplicar√° a todos los repositorios en tu m√°quina.\n\ngit config --global user.name \"Your Name\"\n\nEste comando establece tu nombre de usuario, que tambi√©n se asociar√° con los commits que realices. Al igual que el correo electr√≥nico, se utilizar√° en todos tus commits en cualquier repositorio de Git en tu m√°quina.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap3.html#referencias",
    "href": "Cap3.html#referencias",
    "title": "4¬† Conectar a GitHub con SSH",
    "section": "4.7 Referencias",
    "text": "4.7 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Conectar a GitHub con SSH</span>"
    ]
  },
  {
    "objectID": "Cap4.html",
    "href": "Cap4.html",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "",
    "text": "5.1 GitHub primero, RStudio despu√©s‚Ä¶\nEsto nos generar√° los siguientes elementos:\nCon este procedimiento ya no es necesario preocuparse por configurar controles remotos Git y rastrear ramas en la l√≠nea de comandos.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comandos usados en Github y RStudio</span>"
    ]
  },
  {
    "objectID": "Cap4.html#github-primero-rstudio-despu√©s",
    "href": "Cap4.html#github-primero-rstudio-despu√©s",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "",
    "text": "Crea un repositorio en GitHub: mi_repositorio &gt; Public &gt; YES initialize this repository with a README &gt; clicken el gran bot√≥n verde ‚ÄúCreate repository‚Äù\nEn RStudio crea un nuevo proyecto: File &gt; New Project &gt; Version Control &gt; Git. Ahi pega el URL del repositorio https://github.com/mi_usuario/mi_repositorio.git. Da click en Create Project.\n\n\n\nUn directorio nuevo\nUn repositorio Git enlazado a al repositorio de GitHub\nUn proyecto en RStudio",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comandos usados en Github y RStudio</span>"
    ]
  },
  {
    "objectID": "Cap4.html#comentar-pull-y-push-en-rstudio",
    "href": "Cap4.html#comentar-pull-y-push-en-rstudio",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.2 Comentar, pull y push en Rstudio",
    "text": "5.2 Comentar, pull y push en Rstudio\n\nCon la flecha azul podemos hacer pull (RECUERDA HACERLO ANTES DE HACER UN PUSH), y con la flecha verde un push. Para poder comentar y hacer push debemos marcar con una palomita mediante un click en las peque√±as cajas blancas de la columna Staged, damos click en commit lo cual nos abre la siguiente ventana.\n\nVolvemos a dar click en commit, y finalizamos con push (flecha verde).",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comandos usados en Github y RStudio</span>"
    ]
  },
  {
    "objectID": "Cap4.html#pagina-de-inicio-en-github",
    "href": "Cap4.html#pagina-de-inicio-en-github",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.3 Pagina de inicio en GitHub",
    "text": "5.3 Pagina de inicio en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama EveliaCoss, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss\nAgrega un README al repositorio con tu informacion. Por Default ya trae una plantilla, modificala y adaptala a tu gusto.\nVisualiza como cambia tu inicio en el Github.\nSincroniza el GitHub en RStudio y realiza los cambios desde ahi.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comandos usados en Github y RStudio</span>"
    ]
  },
  {
    "objectID": "Cap4.html#referencias",
    "href": "Cap4.html#referencias",
    "title": "5¬† Comandos usados en Github y RStudio",
    "section": "5.4 Referencias",
    "text": "5.4 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comandos usados en Github y RStudio</span>"
    ]
  },
  {
    "objectID": "Cap5.html",
    "href": "Cap5.html",
    "title": "6¬† Buenas practicas en R",
    "section": "",
    "text": "6.1 Materiales informativos\nüí™ Estuve muy intensa viendo su codigo. Muchas gracias por tenerlos publico.",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#materiales-informativos",
    "href": "Cap5.html#materiales-informativos",
    "title": "6¬† Buenas practicas en R",
    "section": "",
    "text": "Curso de Joselyn Cristina Ch√°vez Fuentes\nMe ayudo mucho este Video\nDocumentaci√≥n de funciones de Andr√©s Arredondo Cruz",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#un-algoritmo-nos-permite-resolver-un-problema",
    "href": "Cap5.html#un-algoritmo-nos-permite-resolver-un-problema",
    "title": "6¬† Buenas practicas en R",
    "section": "6.2 Un algoritmo nos permite resolver un problema ‚≠ê",
    "text": "6.2 Un algoritmo nos permite resolver un problema ‚≠ê\nUn algoritmo es un m√©todo para resolver un problema mediante una serie de pasos definidos, precisos y finitos.\n\nDefinido: si se sigue dos veces, se obtiene el mismo resultado. Es reproducible.\nPreciso: implica el orden de realizaci√≥n de cada uno de los pasos.\nFinito: Tiene un numero determinado de pasos, implica que tiene un fin.\n\n\nUn algoritmo podemos definirlo como un programa o software.",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#para-escribir-un-buen-software-necesitas",
    "href": "Cap5.html#para-escribir-un-buen-software-necesitas",
    "title": "6¬† Buenas practicas en R",
    "section": "6.3 Para escribir un buen software necesitas:",
    "text": "6.3 Para escribir un buen software necesitas:\n\nEscribir c√≥digo mantenible (maintainable code), usar control de versiones (version control) y rastreadores de problemas (issue trackers), revisiones de c√≥digo (code reviews), pruebas unitarias (unit testing) y automatizaci√≥n de tareas (task automation).\nWilson, et al.¬†2014. PLOS Biology\n\nCon el fin de¬†previnir retracciones.\n\n\n\n\n\n\nPasos para escribir un buen software\n\n\n\n\nAn√°lisis del problema / Definir el problema\nDise√±o del algoritmo / Dise√±o del programa\nCodificaci√≥n / Escribir el c√≥digo\nCompilaci√≥n y ejecuci√≥n del programa\nVerificaci√≥n / Realizar pruebas\nDepuraci√≥n / Detectar los errores y corregirlos\n\n\nProgramacion defensiva\n\n\nDocumentaci√≥n",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#paso-7-documentaci√≥n",
    "href": "Cap5.html#paso-7-documentaci√≥n",
    "title": "6¬† Buenas practicas en R",
    "section": "6.4 Paso 7: Documentaci√≥n",
    "text": "6.4 Paso 7: Documentaci√≥n\n\n\n\n\n\n\nNote\n\n\n\n\nAutor (author): Su nombre\nDia (date): Fecha de creaci√≥n\nPaquetes (packages)\nDirectorio de trabajo (Working directory): En que carpeta se encuentra tu datos y programa.\nInformaci√≥n descriptiva del programa (Description): ¬øPara qu√© sirve el programa? Ej: El siguiente programa realiza la suma de dos numeros enteros a partir de la entrada del usuario y posteriormente la imprime en pantalla.\nUsage ¬øC√≥mo se utiliza?\nArgumentos (Arguments)\n\nInformaci√≥n de entrada (Data Inputs): Ej: Solo numeros enteros (sin decimales).\nInformaci√≥n de salida (Outpus): Graficas, figuras, tablas, etc.",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "href": "Cap5.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "title": "6¬† Buenas practicas en R",
    "section": "6.5 Puntos claves para buenas practicas en bioinfo ‚≠ê",
    "text": "6.5 Puntos claves para buenas practicas en bioinfo ‚≠ê\n\nEscriba programas para personas, no para computadoras (Documenta qu√© hace y por qu√©). - Se coherente en la nomenclatura, indentaci√≥n y otros aspectos del estilo.\nDivide los programas en funciones cortas de un solo prop√≥sito. üíª üìö\nNo repitas tu c√≥digo. Crea pasos reproducibles o que se repitan por si solas. ‚û∞\nPlanifique los errores (Programacion defensiva) üö©\nOptimice el software s√≥lo despu√©s de que funcione correctamente. - Si funciona no lo modifiques, simplificalo.\nColaborar - Busque siempre bibliotecas de software bien mantenidas que hagan lo que necesita. üë•\n\n\n\n\n\n\n\nEjemplo de como realizo mis documentos üíú\n\n\n\nAqui les dejo el script que les doy a mis alumnos VisualizacionDatos.R del curso de An√°lisis de datos de RNA-Seq.",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#pagina-web-en-github",
    "href": "Cap5.html#pagina-web-en-github",
    "title": "6¬† Buenas practicas en R",
    "section": "6.6 Pagina web en GitHub",
    "text": "6.6 Pagina web en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario y agregale ‚Äú.github.io‚Äù. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama ‚ÄúEveliaCoss.github.io‚Äù, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss.github.io\nDescarga el archivo index.Rmd y modificalo con tu informacion en tu repositorio.\nNo olvides sincronizar el GitHub en RStudio y realiza los cambios desde ahi.\nEn GitHub, convierte en pagina web tu repositorio en Settings &gt; Pages &gt; Branch cambia a Main y root &gt; Save",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#top-github-users-by-public-contributions-in-mexico",
    "href": "Cap5.html#top-github-users-by-public-contributions-in-mexico",
    "title": "6¬† Buenas practicas en R",
    "section": "6.7 Top GitHub Users By Public Contributions in Mexico",
    "text": "6.7 Top GitHub Users By Public Contributions in Mexico",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  },
  {
    "objectID": "Cap5.html#referencias",
    "href": "Cap5.html#referencias",
    "title": "6¬† Buenas practicas en R",
    "section": "6.8 Referencias",
    "text": "6.8 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio\nWilson, et al.¬†2014. Best Practices for Scientific Computing. PLOS Biology\nEvelia Coss - tutorial Buenas practicas en R\nEvelia Coss - Make your CV tutorial",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Buenas practicas en R</span>"
    ]
  }
]